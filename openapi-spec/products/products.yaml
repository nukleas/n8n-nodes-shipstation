# ShipStation API v2 - Products Resource
# This file contains all product-related endpoints and schemas
# Including: product management, SKU handling, and inventory tracking

paths:
  /v2/products:
    x-visibility: public
    summary: Products
    description: |
      Manage products and their associated SKUs for inventory tracking.
    get:
      operationId: getProducts
      summary: List products
      tags:
        - products
      parameters:
        - name: sku
          in: query
          schema:
            type: string
            description: Filter by SKU
        - name: name
          in: query
          schema:
            type: string
            description: Filter by product name
        - name: product_category
          in: query
          schema:
            type: string
            description: Filter by product category
        - name: product_type
          in: query
          schema:
            type: string
            description: Filter by product type
        - name: warehouse_id
          in: query
          schema:
            type: string
            description: Filter by warehouse ID
        - name: created_date_start
          in: query
          schema:
            type: string
            format: date-time
            description: Filter by creation date start
        - name: created_date_end
          in: query
          schema:
            type: string
            format: date-time
            description: Filter by creation date end
        - name: modified_date_start
          in: query
          schema:
            type: string
            format: date-time
            description: Filter by modification date start
        - name: modified_date_end
          in: query
          schema:
            type: string
            format: date-time
            description: Filter by modification date end
        - name: page
          in: query
          schema:
            type: integer
            description: Page number
        - name: page_size
          in: query
          schema:
            type: integer
            description: Number of items per page
        - name: sort_by
          in: query
          schema:
            type: string
            enum:
              - name
              - sku
              - created_date
              - modified_date
            description: Sort field
        - name: sort_dir
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
            description: Sort direction
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductResponseBody'
                  total:
                    type: integer
                  page:
                    type: integer
                  pages:
                    type: integer
                  links:
                    type: object
                    properties:
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                      next:
                        type: object
                        properties:
                          href:
                            type: string
                      prev:
                        type: object
                        properties:
                          href:
                            type: string
                      self:
                        type: object
                        properties:
                          href:
                            type: string
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    post:
      operationId: createProduct
      summary: Create product
      tags:
        - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequestBody'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v2/products/{product_id}:
    x-visibility: public
    summary: Product
    description: |
      Manage a specific product.
    get:
      operationId: getProduct
      summary: Get product
      tags:
        - products
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    put:
      operationId: updateProduct
      summary: Update product
      tags:
        - products
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequestBody'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    delete:
      operationId: deleteProduct
      summary: Delete product
      tags:
        - products
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted successfully
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

components:
  schemas:
    CreateProductRequestBody:
      title: create_product_request_body
      type: object
      properties:
        sku:
          type: string
          description: Product SKU
        name:
          type: string
          description: Product name
        price:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
          description: Product price
        weight:
          type: object
          properties:
            value:
              type: number
            unit:
              type: string
              enum:
                - pound
                - ounce
                - kilogram
                - gram
          description: Product weight
        dimensions:
          type: object
          properties:
            unit:
              type: string
              enum:
                - inch
                - centimeter
            length:
              type: number
            width:
              type: number
            height:
              type: number
          description: Product dimensions
        product_category:
          type: string
          description: Product category
        product_type:
          type: string
          description: Product type
        warehouse_id:
          type: string
          description: Associated warehouse ID
        active:
          type: boolean
          description: Whether the product is active
          default: true
        customs_description:
          type: string
          description: Description for customs
        customs_value:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
          description: Customs value
        country_of_origin:
          type: string
          description: Country of origin
        harmonized_tariff_code:
          type: string
          description: Harmonized tariff code
        aliases:
          type: array
          items:
            type: string
          description: Product aliases
        tags:
          type: array
          items:
            type: string
          description: Product tags
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              alt_text:
                type: string
          description: Product images
      required:
        - sku
        - name
    UpdateProductRequestBody:
      title: update_product_request_body
      type: object
      properties:
        sku:
          type: string
          description: Product SKU
        name:
          type: string
          description: Product name
        price:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
          description: Product price
        weight:
          type: object
          properties:
            value:
              type: number
            unit:
              type: string
              enum:
                - pound
                - ounce
                - kilogram
                - gram
          description: Product weight
        dimensions:
          type: object
          properties:
            unit:
              type: string
              enum:
                - inch
                - centimeter
            length:
              type: number
            width:
              type: number
            height:
              type: number
          description: Product dimensions
        product_category:
          type: string
          description: Product category
        product_type:
          type: string
          description: Product type
        warehouse_id:
          type: string
          description: Associated warehouse ID
        active:
          type: boolean
          description: Whether the product is active
        customs_description:
          type: string
          description: Description for customs
        customs_value:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
          description: Customs value
        country_of_origin:
          type: string
          description: Country of origin
        harmonized_tariff_code:
          type: string
          description: Harmonized tariff code
        aliases:
          type: array
          items:
            type: string
          description: Product aliases
        tags:
          type: array
          items:
            type: string
          description: Product tags
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              alt_text:
                type: string
          description: Product images
    ProductResponseBody:
      title: product_response_body
      type: object
      properties:
        product_id:
          type: string
          description: Product ID
        sku:
          type: string
          description: Product SKU
        name:
          type: string
          description: Product name
        price:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
          description: Product price
        weight:
          type: object
          properties:
            value:
              type: number
            unit:
              type: string
              enum:
                - pound
                - ounce
                - kilogram
                - gram
          description: Product weight
        dimensions:
          type: object
          properties:
            unit:
              type: string
              enum:
                - inch
                - centimeter
            length:
              type: number
            width:
              type: number
            height:
              type: number
          description: Product dimensions
        product_category:
          type: string
          description: Product category
        product_type:
          type: string
          description: Product type
        warehouse_id:
          type: string
          description: Associated warehouse ID
        active:
          type: boolean
          description: Whether the product is active
        customs_description:
          type: string
          description: Description for customs
        customs_value:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
          description: Customs value
        country_of_origin:
          type: string
          description: Country of origin
        harmonized_tariff_code:
          type: string
          description: Harmonized tariff code
        aliases:
          type: array
          items:
            type: string
          description: Product aliases
        tags:
          type: array
          items:
            type: string
          description: Product tags
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              alt_text:
                type: string
          description: Product images
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        modified_at:
          type: string
          format: date-time
          description: Last modification timestamp
        inventory_tracking:
          type: object
          properties:
            track_quantity:
              type: boolean
            on_hand:
              type: integer
            allocated:
              type: integer
            available:
              type: integer
          description: Inventory tracking information