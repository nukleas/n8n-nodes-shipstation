# ShipStation API v2 - Shipments Resource
# This file contains all shipment-related endpoints and schemas
# Including: shipment creation, management, cancellation, and rate calculation

paths:
  /v2/shipments:
    x-visibility: public
    summary: Shipments
    description: |
      Manage shipments throughout their lifecycle.
    get:
      operationId: getShipments
      summary: List shipments
      tags:
        - shipments
      parameters:
        - name: shipment_id
          in: query
          schema:
            type: string
        - name: external_shipment_id
          in: query
          schema:
            type: string
        - name: batch_id
          in: query
          schema:
            type: string
        - name: tag_name
          in: query
          schema:
            type: string
        - name: warehouse_id
          in: query
          schema:
            type: string
        - name: created_date_start
          in: query
          schema:
            type: string
            format: date-time
        - name: created_date_end
          in: query
          schema:
            type: string
            format: date-time
        - name: modified_date_start
          in: query
          schema:
            type: string
            format: date-time
        - name: modified_date_end
          in: query
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          schema:
            type: integer
        - name: page_size
          in: query
          schema:
            type: integer
        - name: sort_by
          in: query
          schema:
            type: string
            enum:
              - modified_date
              - created_date
        - name: sort_dir
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: List of shipments
          content:
            application/json:
              schema:
                type: object
                properties:
                  shipments:
                    type: array
                    items:
                      $ref: '#/components/schemas/ShipmentResponseBody'
                  total:
                    type: integer
                  page:
                    type: integer
                  pages:
                    type: integer
                  links:
                    type: object
                    properties:
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                      next:
                        type: object
                        properties:
                          href:
                            type: string
                      prev:
                        type: object
                        properties:
                          href:
                            type: string
                      self:
                        type: object
                        properties:
                          href:
                            type: string
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    post:
      operationId: createShipment
      summary: Create shipment
      tags:
        - shipments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShipmentRequestBody'
      responses:
        '201':
          description: Shipment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v2/shipments/external_shipment_id/{external_shipment_id}:
    x-visibility: public
    summary: Shipment by External ID
    description: |
      Get a shipment by its external shipment ID.
    get:
      operationId: getShipmentByExternalId
      summary: Get shipment by external ID
      tags:
        - shipments
      parameters:
        - name: external_shipment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Shipment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v2/shipments/{shipment_id}:
    x-visibility: public
    summary: Shipment
    description: |
      Manage a specific shipment.
    get:
      operationId: getShipment
      summary: Get shipment
      tags:
        - shipments
      parameters:
        - name: shipment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Shipment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    put:
      operationId: updateShipment
      summary: Update shipment
      tags:
        - shipments
      parameters:
        - name: shipment_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentRequestBody'
      responses:
        '200':
          description: Shipment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v2/shipments/{shipment_id}/cancel:
    x-visibility: public
    summary: Cancel Shipment
    description: |
      Cancel a specific shipment.
    put:
      operationId: cancelShipment
      summary: Cancel shipment
      tags:
        - shipments
      parameters:
        - name: shipment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Shipment cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  approved:
                    type: boolean
                  message:
                    type: string
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v2/shipments/{shipment_id}/rates:
    x-visibility: public
    summary: Shipment Rates
    description: |
      Calculate rates for a specific shipment.
    get:
      operationId: getShipmentRates
      summary: Get shipment rates
      tags:
        - shipments
      parameters:
        - name: shipment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Shipment rates
          content:
            application/json:
              schema:
                type: object
                properties:
                  rates:
                    type: array
                    items:
                      $ref: '#/components/schemas/RateResponseBody'
                  invalid_rates:
                    type: array
                    items:
                      type: object
                      properties:
                        carrier_id:
                          type: string
                        service_code:
                          type: string
                        error_messages:
                          type: array
                          items:
                            type: string
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v2/shipments/{shipment_id}/tags/{tag_name}:
    x-visibility: public
    summary: Shipment Tag
    description: |
      Manage tags for a specific shipment.
    put:
      operationId: addShipmentTag
      summary: Add tag to shipment
      tags:
        - shipments
      parameters:
        - name: shipment_id
          in: path
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tag added to shipment successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    delete:
      operationId: removeShipmentTag
      summary: Remove tag from shipment
      tags:
        - shipments
      parameters:
        - name: shipment_id
          in: path
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tag removed from shipment successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponseBody'
        '400':
          description: The request contained errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: The request was denied due to an authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '403':
          description: The request was denied due to authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

components:
  schemas:
    CreateShipmentRequestBody:
      title: create_shipment_request_body
      type: object
      properties:
        external_shipment_id:
          type: string
        order_id:
          type: string
        external_order_id:
          type: string
        order_number:
          type: string
        service_code:
          type: string
        carrier_id:
          type: string
        package_code:
          type: string
        warehouse_id:
          type: string
        ship_date:
          type: string
          format: date-time
        ship_to:
          $ref: '#/components/schemas/Address'
        ship_from:
          $ref: '#/components/schemas/Address'
        return_to:
          $ref: '#/components/schemas/Address'
        packages:
          type: array
          items:
            $ref: '#/components/schemas/Package'
        customs:
          $ref: '#/components/schemas/Customs'
        advanced_options:
          $ref: '#/components/schemas/AdvancedOptions'
        tags:
          type: array
          items:
            type: string
      required:
        - ship_to
        - ship_from
        - packages
    UpdateShipmentRequestBody:
      title: update_shipment_request_body
      type: object
      properties:
        external_shipment_id:
          type: string
        order_id:
          type: string
        external_order_id:
          type: string
        order_number:
          type: string
        service_code:
          type: string
        carrier_id:
          type: string
        package_code:
          type: string
        warehouse_id:
          type: string
        ship_date:
          type: string
          format: date-time
        ship_to:
          $ref: '#/components/schemas/Address'
        ship_from:
          $ref: '#/components/schemas/Address'
        return_to:
          $ref: '#/components/schemas/Address'
        packages:
          type: array
          items:
            $ref: '#/components/schemas/Package'
        customs:
          $ref: '#/components/schemas/Customs'
        advanced_options:
          $ref: '#/components/schemas/AdvancedOptions'
        tags:
          type: array
          items:
            type: string
    ShipmentResponseBody:
      title: shipment_response_body
      type: object
      properties:
        shipment_id:
          type: string
        external_shipment_id:
          type: string
        order_id:
          type: string
        external_order_id:
          type: string
        order_number:
          type: string
        service_code:
          type: string
        carrier_id:
          type: string
        package_code:
          type: string
        warehouse_id:
          type: string
        ship_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        modified_at:
          type: string
          format: date-time
        shipment_status:
          type: string
          enum:
            - pending
            - processing
            - label_purchased
            - cancelled
        ship_to:
          $ref: '#/components/schemas/Address'
        ship_from:
          $ref: '#/components/schemas/Address'
        return_to:
          $ref: '#/components/schemas/Address'
        packages:
          type: array
          items:
            $ref: '#/components/schemas/Package'
        customs:
          $ref: '#/components/schemas/Customs'
        advanced_options:
          $ref: '#/components/schemas/AdvancedOptions'
        tags:
          type: array
          items:
            type: string
        total_weight:
          type: object
          properties:
            value:
              type: number
            unit:
              type: string
        label_messages:
          type: object
          properties:
            reference1:
              type: string
            reference2:
              type: string
            reference3:
              type: string
        external_package_id:
          type: string
        cost:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
    Package:
      title: package
      type: object
      properties:
        package_id:
          type: string
        package_code:
          type: string
        weight:
          type: object
          properties:
            value:
              type: number
            unit:
              type: string
              enum:
                - pound
                - ounce
                - kilogram
                - gram
        dimensions:
          type: object
          properties:
            unit:
              type: string
              enum:
                - inch
                - centimeter
            length:
              type: number
            width:
              type: number
            height:
              type: number
        insured_value:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
        tracking_number:
          type: string
        label_messages:
          type: object
          properties:
            reference1:
              type: string
            reference2:
              type: string
            reference3:
              type: string
        external_package_id:
          type: string
      required:
        - weight
    Customs:
      title: customs
      type: object
      properties:
        contents:
          type: string
          enum:
            - merchandise
            - documents
            - gift
            - returned_goods
            - sample
        non_delivery:
          type: string
          enum:
            - return_to_sender
            - treat_as_abandoned
        customs_items:
          type: array
          items:
            $ref: '#/components/schemas/CustomsItem'
    CustomsItem:
      title: customs_item
      type: object
      properties:
        customs_item_id:
          type: string
        description:
          type: string
        quantity:
          type: integer
        value:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
        harmonized_tariff_code:
          type: string
        country_of_origin:
          type: string
        unit_of_measure:
          type: string
        sku:
          type: string
      required:
        - description
        - quantity
        - value
    AdvancedOptions:
      title: advanced_options
      type: object
      properties:
        bill_to_party:
          type: string
          enum:
            - my_account
            - recipient
            - third_party
        bill_to_account:
          type: string
        bill_to_postal_code:
          type: string
        bill_to_country_code:
          type: string
        contains_alcohol:
          type: boolean
        delivered_duty_paid:
          type: boolean
        non_machinable:
          type: boolean
        saturday_delivery:
          type: boolean
        dry_ice:
          type: boolean
        dry_ice_weight:
          type: object
          properties:
            value:
              type: number
            unit:
              type: string
        fedex_freight_inside_pickup:
          type: boolean
        fedex_freight_inside_delivery:
          type: boolean
        fedex_freight_freight_collect:
          type: boolean
        fedex_freight_billing_contact:
          type: object
          properties:
            name:
              type: string
            company:
              type: string
            phone:
              type: string
            email:
              type: string
        origin_type:
          type: string
          enum:
            - pickup
            - drop_off
    Address:
      title: address
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
        phone:
          type: string
        email:
          type: string
        address_residential_indicator:
          type: string
          enum:
            - yes
            - no
            - unknown
      required:
        - name
        - street1
        - city
        - state
        - postal_code
        - country
    RateResponseBody:
      title: rate_response_body
      type: object
      properties:
        rate_id:
          type: string
        rate_type:
          type: string
          enum:
            - shipment
            - check
        carrier_id:
          type: string
        shipping_amount:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
        insurance_amount:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
        confirmation_amount:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
        other_amount:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
        tax_amount:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
        zone:
          type: integer
        package_type:
          type: string
        delivery_days:
          type: integer
        guaranteed_service:
          type: boolean
        estimated_delivery_date:
          type: string
          format: date-time
        carrier_delivery_days:
          type: string
        ship_date:
          type: string
          format: date-time
        negotiated_rate:
          type: boolean
        service_type:
          type: string
        service_code:
          type: string
        trackable:
          type: boolean
        carrier_code:
          type: string
        carrier_nickname:
          type: string
        carrier_friendly_name:
          type: string
        validation_status:
          type: string
          enum:
            - valid
            - invalid
            - has_warnings
            - unknown
        warning_messages:
          type: array
          items:
            type: string
        error_messages:
          type: array
          items:
            type: string